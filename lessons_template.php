<?php
include("blocks/db.php"); // Соединяемся с базой данных
$result = mysqli_query($db,"SELECT title,meta_d,meta_k,text FROM settings WHERE page='lessons'");//Обращаемся к таблице в БД
$myrow=mysqli_fetch_array($result); 
?>
<!doctype html>
<html lang="ru">

<head>
<meta charset="utf-8">
<meta name="description" content="<?php echo $myrow['meta_d']?>">
<meta name="keywords" content="<?php echo $myrow['meta_k']?>">

<title><?php echo $myrow['title'] ?></title>

<link href="style.css" rel="stylesheet" type="text/css">
</head>

<body>
	

<table width="694"  align="center" cellpadding="0" cellspacing="0" class="main_border">
      <tbody>
      <?php include ("blocks/header.php"); ?>
      <tr bgcolor="#FFFFFF">
      <td>
		<table width="690" cellpadding="0" cellspacing="0" >
		  <tbody>
			<tr >
			<?php include ("blocks/lefttd.php"); ?>        
			<td valign="top"><p>Описываются 7 "детских" ошибок                     (21-15 в обратном порядке, в соответствии со степенью                     серьезности по нашей классификации). Такие ошибки не вызывают                     серьезных проблем, но приводят к уменьшению эффективности                     работы программы, а также выражаются в громоздком                     трудночитаемом коде, в который, к тому же, трудно вносить   изменения.</p>
              <p>Одна из наиболее сильных сторон                     PHP является, одновременно, и его слабой стороной: PHP очень                     прост в изучении. Это привлекает многих людей; однако,                     несмотря на его кажущуюся простоту, не так-то просто научиться   использовать этот язык правильно и эффективно.<img src="articles/26092017/solid-principles-in-php.jpg" width="450" align="center" alt=""/></p>
              <p>Как правило, дело в недостаточной практике                     программирования. Неопытные программисты становятся перед                     лицом необходимости создания сложных веб-приложений. Поэтому                     сплошь и рядом допускаются ошибки, которых избежал бы опытный                     программист, такие как необоснованное использование функции   printf()или неправильное использование семантики PHP. </p>
              <p>В этой серии из трех статей представлены наиболее, по     нашему мнению, характерные ошибки. Эти ошибки можно     классифицировать по нескольким категориям, от некритических до     смертельных. Наряду с анализом этих ошибок, представлены     способы их избежания, а также некоторые маленькие хитрости,     накопленные за многие годы практики программирования.</p>
              <ul>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h1">Целевая       аудитория</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h2">Введение</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h3">21.       Неоправданное использование функции printf()</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h4">20.       Неверное применение семантики языка</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h5">19.       Недостаточно либо излишне комментированный текст</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h6">18.       Слишком много временных переменных</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h7">17.       Переписываем стандартные функции</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h8">16.       Клиентская часть программы не отделяется от серверной       части</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h9">15.       Использование устаревшего синтаксиса и функций</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h10">Резюме</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004#h11">Об       авторе</a> <br>
                  <br>
                </li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004_2">21       ошибка программиста PHP, часть 2</a></li>
                <li><a href="http://www.php.su/articles/?cat=common&page=004_3">21       ошибка программиста PHP, часть 3</a></li>
              </ul>
              <p><a name="h1" id="h1"></a>Целевая     аудитория</p>
              <p>Эта серия статей предназначена для тех программистов на     языке PHP, которые хотят избежать наиболее общих ошибок в     написании кода. Читатель, как минимум, должен знать общий     синтаксис PHP, а также весьма желателен некоторый опыт     использования языка на практике.</p>
              <p>&nbsp;</p>
              <p><a name="h2" id="h2"></a>Введение</p>
              <p>Одна из наиболее сильных сторон PHP является, одновременно,     и его слабой стороной: PHP очень прост в изучении. Это     привлекает многих людей; однако, несмотря на его кажущуюся     простоту, не так-то просто научиться использовать этот язык <em>правильно и эффективно</em>.</p>
              <p>Как правило, дело в недостаточной практике     программирования. Н<img src="articles/26092017/the-php-practitioner.jpg" width="450" align="center"  alt=""/>еопытные программисты становятся перед     лицом необходимости создания сложных веб-приложений. Поэтому     сплошь и рядом допускаются ошибки, которых избежал бы опытный     программист, такие как необоснованное использование функции     printf() или неправильное использование семантики PHP.</p>
              <p>В этой серии из трех статей представлены наиболее, по     нашему мнению, характерные ошибки. Эти ошибки можно     классифицировать по нескольким категориям, от "некритических"     до "смертельных". Наряду с анализом этих ошибок представлены     способы их избежания, а также некоторые "маленькие хитрости",     накопленные за многие годы практики программирования.</p>
				
				
				</td>
				
	</tr>
    </tbody>
  </table>
  </td>
	  <?php include("blocks/footer.php"); ?>
 </tbody>
 </table>
</body>

</html>